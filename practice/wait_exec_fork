#include <unistd.h>
#include <sys/wait.h>
#include <sys/types.h>
#include <stdio.h>

int main() {
    int status;
    pid_t child;
    char *args[] = {"/bin/ls", "-la", NULL};

    for (int i = 0; i < 5; i++) {
        child = fork();

        if (child < 0) {
            perror("Fork failed\n");
            return 1;
        } else if (child == 0) {
            // Child process
            if (execve(args[0], args, NULL) == -1) {
                perror("execve failed");
                return 1;
            }
        } else {
            // Parent process
            waitpid(child, &status, 0);
            if (WIFEXITED(status)) {
                printf("Child exited normally with %d\n", WEXITSTATUS(status));
            } else {
                printf("Child exited abnormally\n");
            }
        }
    }

    return 0;
}

